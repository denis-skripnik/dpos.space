var buttonSignTx = document.querySelector("a.signtx");
buttonSignTx.addEventListener("click", function( event ) {
    buttonSignTx.classList.add('wait');
var multisigacc = document.getElementById("multisigacc").value
golos.api.getAccounts([multisigacc], function(err, result) {
  if(err)return alert(err)
  var maccs = result[0].posting.account_auths,
   amaccs = result[0].active.account_auths,
   wt = result[0].posting.weight_threshold,
   awt =  result[0].active.weight_threshold,
  log = "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å—É–º–º–∞—Ä–Ω—ã–π –≤–µ—Å threshold –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–ª–æ–∫—á–µ–π–Ω:  –ø–æ—Å—Ç–∏–Ω–≥ - "+wt+", –∞–∫—Ç–∏–≤–Ω—ã–π:"+awt+" </br>–ê–∫–∫–∞—É–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–¥–ø–∏—Å–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –æ—Ç @"+multisigacc+" (–ª–æ–≥–∏–Ω,–≤–µ—Å):</br>–ü–æ—Å—Ç–∏–Ω–≥–∏: "+maccs+"</br>–ê–∫—Ç–∏–≤–Ω—ã–µ: "+amaccs;
  return document.getElementById('out').insertAdjacentHTML("afterbegin","<div class='log'>"+log+"</br></br>");
});
var newTx = "";
try {
    newTx = JSON.parse(document.getElementById("unsigned").value);
}
catch (error) {
    if (error instanceof SyntaxError) {
        alert("–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –ø–æ–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–π: " + error.message);
    }
    else {
        throw error;
    }
}
var wif = '';
var wif_list = document.getElementById("wif").value;
if (wif_list === 'active_key') {
    wif = active_key;
} else {
    wif = posting_key;
}
var now = new Date().getTime()+18e5,
expire = new Date(now).toISOString().split('.')[0];
golos.api.getDynamicGlobalProperties(function(e, current) {
//golos.api.getBlockHeader(blockNum, function(err, result) {
    var blockid =current.head_block_id;
    n = [];
    for (var i = 0; i < blockid.length; i += 2) {
        n.push(blockid.substr(i, 2));
    }
    var hex = n[7]+n[6]+n[5]+n[4];
    var refBlockNum = current.head_block_number & 0xffff;
    var refBlockPrefix = parseInt(hex, 16) 
var trx = {
 'expiration': expire,    
 'extensions': [],
 'operations': newTx,
 'ref_block_num': refBlockNum,
'ref_block_prefix': refBlockPrefix             
};
var trxs = "";
try {
    trxs = golos.auth.signTransaction(trx,{"posting":wif});
}
catch (error) {
    alert("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–ø–∏—Å–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é: " + error.message);
    return buttonSignTx.classList.remove("wait");
}
var json = JSON.stringify(trxs, null, 4);
 buttonSignTx.classList.remove("wait");
  return document.getElementById('out').insertAdjacentHTML("afterbegin","üìú –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ –ø–µ—Ä–µ–¥–∞–π—Ç–µ –Ω–∞ –ø–æ–¥–ø–∏—Å—å —Å–ª–µ–¥—É—é—â–µ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É –º—É–ª—å—Ç–∏—Å–∏–≥-–∞–∫–∫–∞—É–Ω—Ç–∞</br><pre>"+json+"</pre></br>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é expiration - –≤ –Ω–µ–π —É–∫–∞–∑–∞–Ω–∞ –¥–∞—Ç–∞ –≤ GMT 0 –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å—Ç–∞–Ω–µ—Ç –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–π. –ï—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –º—É–ª—å—Ç–∏—Å–∏–≥–∞ –Ω–µ —É—Å–ø–µ—é—Ç –ø–æ–¥–ø–∏—Å–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –¥–æ —ç—Ç–æ–π –¥–∞—Ç—ã - —Å—Ñ–æ—Ä–º–∏—Ä—É–π—Ç–µ –Ω–æ–≤—É—é!")
//});
});
var buttonSignTxStep2 = document.querySelector("a.signtx-step2");
buttonSignTxStep2.addEventListener("click", function( event ) {
    buttonSignTxStep2.classList.add('wait');
golos.api.getAccounts([golos_login], function(err, result) {
  if(err)return console.log(err)
  var maccs = result[0].posting.account_auths,
   amaccs = result[0].active.account_auths,
   wt = result[0].posting.weight_threshold,
   awt =  result[0].active.weight_threshold,
  log = "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å—É–º–º–∞—Ä–Ω—ã–π –≤–µ—Å threshold –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–ª–æ–∫—á–µ–π–Ω:  –ø–æ—Å—Ç–∏–Ω–≥ - "+wt+", –∞–∫—Ç–∏–≤–Ω—ã–π:"+awt+" </br>–ê–∫–∫–∞—É–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–¥–ø–∏—Å–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –æ—Ç @"+multisigacc+" (–ª–æ–≥–∏–Ω,–≤–µ—Å):</br>–ü–æ—Å—Ç–∏–Ω–≥–∏: "+maccs+"</br>–ê–∫—Ç–∏–≤–Ω—ã–µ: "+amaccs;
  return document.getElementById('out-step2').insertAdjacentHTML("afterbegin","<div class='log'>"+log+"</br></br>");
});
var newTx = "";
try {
    newTx = JSON.parse(document.getElementById("unsigned-step2").value);
}
catch (error) {
    if (error instanceof SyntaxError) {
        alert("–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –ø–æ–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–π: " + error.message);
    }
    else {
        throw error;
    }
}
var wif = '';
var wif_list = document.getElementById("wif-step2").value;
if (wif_list === 'active_key') {
    wif = active_key;
} else {
    wif = posting_key;
}
trx = newTx;
var trxs = "";
try {
    trxs = golos.auth.signTransaction(trx,{"posting":wif});
}
catch (error) {
    alert("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–ø–∏—Å–∞—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é: " + error.message);
    return  buttonSignTxStep2.classList.remove("wait");
}
var json = JSON.stringify(trxs, null, 4);
document.getElementById('out-step2').insertAdjacentHTML("afterbegin","üìú<pre>"+json+"</pre>")
golos.api.broadcastTransactionSynchronous(trxs, function(err, result) {
    buttonSignTxStep2.classList.remove("wait");
        if(err)return alert(err)
        var trxid = result.id
       if(!trxid)alert('–û—à–∏–±–∫–∞',result)
        document.getElementById('out-step2').insertAdjacentHTML("afterbegin","üìú<pre>"+JSON.stringify(result)+"</pre><h3>–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –±–ª–æ–∫—á–µ–π–Ω. ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: <a href='http://golos.com/tx/"+trxid+"'>"+trxid+"</a></h3></br></br></br></br>")
 });
});
});
var buttonSignTxStep3 = document.querySelector("a.signtx-step3");
buttonSignTxStep3.addEventListener("click", function( event ) {
    buttonSignTxStep3.classList.add('wait');
var newTx = "";
try {
    newTx = JSON.parse(document.getElementById("unsigned-step3").value);
}
catch (error) {
    buttonSignTxStep3.classList.remove("wait");
    if (error instanceof SyntaxError) {
        alert("–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –ø–æ–ª–µ –æ–ø–µ—Ä–∞—Ü–∏–π: " + error.message);
    }
    else {
        throw error;
    }
}
golos.api.broadcastTransactionSynchronous(newTx, function(err, result) {
    buttonSignTxStep3.classList.remove("wait");
        if(err)return alert(err)
       var trxid = result.id
       if(!trxid)alert('–û—à–∏–±–∫–∞',result)
        document.getElementById('out-step3').insertAdjacentHTML("afterbegin","–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ –±–ª–æ–∫—á–µ–π–Ω: </br><h3><a href='http://golosd.com/tx/"+trxid+"'>üìú "+trxid+"</a></h3>")
});
});
var AddMultiAuth = document.querySelector("a.addMultisig");
AddMultiAuth.addEventListener("click", function( event ) {
    AddMultiAuth.classList.add("wait");
weightThreshold= Number(document.getElementById("weight-threshold").value),
auths = document.getElementById("auths").value,
splitAuths = auths.split("/"),
authsArray =[];
for (var i = 0; i < splitAuths.length; i++) {
var z = splitAuths[i].split("=")
authsArray.push([z[0],Number(z[1])])
}
console.log(authsArray)
golos.api.getAccounts([golos_login], function(e, data){
    if (e) return alert(e)
       var account = data[0],
     posting,
      active;
      var maccs = account.posting.account_auths,
amaccs = account.active.account_auths,
select = document.getElementById('selectAuth');
valueSelect = select.options[select.selectedIndex].value; 
     if(valueSelect === 'posting'){
for (posting_account of maccs) {
    authsArray.push([posting_account[0], posting_account[1]]);
}
                posting =  {
        "weight_threshold":weightThreshold,
        "account_auths": authsArray,
        "key_auths": [
          [
          account.posting.key_auths[0][0],
            weightThreshold
          ]
        ]
      }
     }else if(valueSelect === 'active'){
        for (active_account of amaccs) {
    authsArray.push([active_account[0], active_account[1]]);
}
      active =  {
        "weight_threshold":weightThreshold,
        "account_auths": authsArray,
        "key_auths": [
          [
          account.active.key_auths[0][0],
            weightThreshold
          ]
        ]
      }
    }
console.log(active,posting)
         var memo = account.memo_key;
console.log(posting)
golos.broadcast.accountUpdate(active_key, 
golos_login, undefined, active, 
posting, memo
               , account.json_metadata, function(err, result) {
         console.log(err,result)
         AddMultiAuth.classList.remove("wait");
             if(err){  var jsone = JSON.stringify(err, null, 4);
         alert(jsone)
 return document.getElementById('out-step4').insertAdjacentHTML("afterbegin","<div class='err'>–û—à–∏–±–∫–∞!</div>")
  }else{
    var json = JSON.stringify(result, null, 4);
  document.getElementById('out-step4').insertAdjacentHTML("afterbegin","<h2>–ì–æ—Ç–æ–≤–æ!</h2>–õ–æ–≥ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–ª–æ–∫—á–µ–π–Ω: </br><code>"+json+"</code>")
  }
       });
});
})
var deleteBUTT = document.querySelector("a.delete-multi");
deleteBUTT.addEventListener("click", function( event ) {
    deleteBUTT.classList.add("wait");
golos.api.getAccounts([golos_login], function(e, data){
     if (e) return alert(e)
       var account = data[0];
       var pAuth = {"weight_threshold": 1,"account_auths": [],"key_auths":account.posting.key_auths};
       var active = {"weight_threshold": 1,"account_auths": [],"key_auths":account.active.key_auths};
         var memo = account.memo_key;
golos.broadcast.accountUpdate(active_key, 
golos_login, undefined, active, 
           pAuth, memo
               , account.json_metadata, function(err, result) {
         console.log(err,result);
         deleteBUTT.classList.remove("wait");
             if(err){  var jsone = JSON.stringify(err, null, 4);
         alert(jsone)
 return document.getElementById('out-step5').insertAdjacentHTML("afterbegin","<div class='err'><h2>–û—à–∏–±–∫–∞!</h2>–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏ —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞. "+jsone+"</div>")
  }else{
    var json = JSON.stringify(result, null, 4);
  document.getElementById('out-step5').insertAdjacentHTML("afterbegin","<h2>–£—Å–ø–µ—à–Ω–æ</h2>–õ–æ–≥ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–ª–æ–∫—á–µ–π–Ω: </br><code>"+json+"</code>")
  }
       });
});
})